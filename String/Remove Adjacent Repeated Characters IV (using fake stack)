/*** Repeatedly remove all adjacent, repeated characters in a given string from left to right.
* No adjacent characters should be identified in the final string.
* Examples
* "abbbaaccz" → "aaaccz" → "ccz" → "z"
* "aabccdc" → "bccdc" → "bdc"
***/

public class Solution {
  //Time: O(n), Space: O(n)
  public String deDup(String input) {
    if (input == null || input.length() <= 1) return input;
    int i = 0;
    StringBuilder str = new StringBuilder(input);
    for (int j = 1; j < str.length(); j++) {
      if (i == -1 || str.charAt(i) != str.charAt(j)) {
        i++;
        str.setCharAt(i, str.charAt(j));
      } else {
        i--;
        while (j + 1 < str.length() && str.charAt(j) == str.charAt(j + 1)) {
          j++;
        }
      }
    }
    str.delete(i + 1, str.length());
    return str.toString();
  }
}
