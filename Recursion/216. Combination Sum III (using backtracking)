class Solution {
    public List<List<Integer>> combinationSum3(int k, int n) {
        List<List<Integer>> res = new ArrayList<>();
        backtrack(res, new ArrayList<>(), k, n, 1);
        return res;
    }
    private void backtrack(List<List<Integer>> res,
                           List<Integer> list, int k, int n, int start) {
        if (list.size() > k) {
            return;
        } else if (list.size() == k && n == 0) {
            res.add(new ArrayList<>(list));
        } else {
            for (int i = start; i <= 9; i++) {
                list.add(i);
                backtrack(res, list, k, n - i, i + 1);
                list.remove(list.size() - 1);
            }
        }
    }
}
