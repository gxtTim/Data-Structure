class Solution {
    // Time: O(mn), Space: O(mn)
    public boolean exist(char[][] board, String word) {
        char[] chars = word.toCharArray();
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[0].length; j++) {
                if (exist(board, i, j, chars, 0)) {
                    return true;
                }
            }
        }
        return false;
    }
    private boolean exist(char[][] board, int i, int j, 
                          char[] chars, int index) {
        if (index == chars.length) {
            return true;
        }
        if (i < 0 || j < 0 || i == board.length || 
            j == board[i].length || board[i][j] != chars[index]) {
            return false;
        }
        board[i][j] = '*';
        boolean res = exist(board, i - 1, j, chars, index + 1) || 
                      exist(board, i, j - 1, chars, index + 1) || 
                      exist(board, i, j + 1, chars, index + 1) || 
                      exist(board, i + 1, j, chars, index + 1);
        board[i][j] = chars[index];
        return res;
    }
}
