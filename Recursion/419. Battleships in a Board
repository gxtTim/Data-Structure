class Solution {
    // Time: O(mn), Space: O(mn)
    public int countBattleships(char[][] board) {
        int res = 0;
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[i].length; j++) {
                if (board[i][j] == 'X') {
                    res++;
                    sink(board, i, j);
                }
            }
        }
        return res;
    }
    private void sink(char[][] board, int i, int j) {
        if (i < 0 || i >= board.length ||
            j < 0 || j >= board[i].length ||
            board[i][j] != 'X') {
            return;
        }
        board[i][j] = '.';
        sink(board, i - 1, j);
        sink(board, i + 1, j);
        sink(board, i, j - 1);
        sink(board, i, j + 1);
    }
    
    // Time: O(mn), Space: O(1)
    public int countBattleships(char[][] board) {
        int res = 0;
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[i].length; j++) {
                if (board[i][j] != '.') {
                    if (i > 0 && board[i - 1][j] == 'X') {
                        continue;
                    }
                    if (j > 0 && board[i][j - 1] == 'X') {
                        continue;
                    }
                    res++;
                }
            }
        }
        return res;
    }
}
