/*
// Definition for a Node.
class Node {
    public int val;
    public Node left;
    public Node right;
    public Node next;

    public Node() {}

    public Node(int _val,Node _left,Node _right,Node _next) {
        val = _val;
        left = _left;
        right = _right;
        next = _next;
    }
};
*/
class Solution {
    // Time: O(n), Space: O(1)
    public Node connect(Node root) {
        Node parent = root;
        while (parent != null && parent.left != null) {
            Node curr = parent;
            while (curr != null) {
                curr.left.next = curr.right;
                curr.right.next = curr.next == null ? null : curr.next.left;
                curr = curr.next;
            }
            parent = parent.left;
        }
        return root;
    }
}
