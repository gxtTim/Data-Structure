/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    //Time: O(n), Space: O(h)
    public TreeNode sortedListToBST(ListNode head) {
        if (head == null) {
            return null;
        }
        return sortedListToBST(head, null);
    }
    private TreeNode sortedListToBST(ListNode low, ListNode high) {
        if (low == high) {
            return null;
        }
        // Find the middle point
        ListNode slow = low;
        ListNode fast = low;
        while (fast != high && fast.next != high) {
            slow = slow.next;
            fast = fast.next.next;
        }
        TreeNode node = new TreeNode(slow.val);
        node.left = sortedListToBST(low, slow);
        node.right = sortedListToBST(slow.next, high);
        return node;
    }
}
