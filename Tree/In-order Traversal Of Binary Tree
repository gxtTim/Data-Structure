/*** Implement an iterative, in-order traversal of a given binary tree, 
* return the list of keys of each node in the tree as it is in-order traversed.***/

/**
 * public class TreeNode {
 *   public int key;
 *   public TreeNode left;
 *   public TreeNode right;
 *   public TreeNode(int key) {
 *     this.key = key;
 *   }
 * }
 */
public class Solution {
  //Time: O(n), Space: O(h), worst O(n), average O(log(n))
  public List<Integer> inOrder(TreeNode root) {
    // left, root, right
    List<Integer> list = new ArrayList<>();
    if (root == null) return list;
    inOrder(root, list);
    return list;
  }
  public void inOrder(TreeNode root, List<Integer> list) {
    if (root == null) return;
    inOrder(root.left, list);
    list.add(root.key);
    inOrder(root.right, list);
  }
}
