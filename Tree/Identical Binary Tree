/*** Check if two given binary trees are identical. 
* Identical means the equal valued keys are at the same position in the two binary trees.***/

/**
 * public class TreeNode {
 *   public int key;
 *   public TreeNode left;
 *   public TreeNode right;
 *   public TreeNode(int key) {
 *     this.key = key;
 *   }
 * }
 */
public class Solution {
  //Time:O(n), Space:O(h), worst O(n), average O(log(n))
  public boolean isIdentical(TreeNode one, TreeNode two) {
    if (one == null && two == null) return true;
    if (one == null || two == null) return false;
    if (one.key != two.key) return false;
    return isIdentical(one.left, two.left) && 
           isIdentical(one.right, two.right);
  }
}
