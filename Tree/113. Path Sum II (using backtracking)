/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    // Time: O(n), Space: O(h)
    public List<List<Integer>> pathSum(TreeNode root, int sum) {
        List<List<Integer>> paths = new ArrayList<>();
        if (root == null) {
            return paths;
        }
        dfs(root, sum, paths, new ArrayList<>());
        return paths;
    }
    private void dfs(TreeNode root, int sum,
                     List<List<Integer>> paths, List<Integer> path) {
        if (root == null) {
            return;
        }
        path.add(root.val);
        if (root.left == null && root.right == null && sum == root.val) {
            paths.add(new ArrayList(path));
        }
        dfs(root.left, sum - root.val, paths, path);
        dfs(root.right, sum - root.val, paths, path);
        path.remove(path.size() - 1);
    }
}
