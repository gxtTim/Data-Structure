/*** Find the K smallest numbers in an unsorted integer array A. 
* The returned numbers should be in ascending order. ***/

public class Solution {
  public int[] kSmallest(int[] array, int k) {
    int[] res = new int[k];
    if (array == null) return res;
    if (k <= 0) return res;
    //maxHeap Time: O(k + (n-k)*log(k)), Space: O(k)
    Queue<Integer> maxHeap = new PriorityQueue<>(Collections.reverseOrder());
    //O(k * log(n)), if heapify O(k)
    for (int i = 0; i < k; i++) {
      maxHeap.offer(array[i]);
    }
    //O((n - k) * log(k))
    for (int i = k; i < array.length; i++) {
      if (array[i] < maxHeap.peek()) {
        maxHeap.poll();
        maxHeap.offer(array[i]);
      }
    }
    //O(n * log(n))
    for (int i = res.length - 1; i >= 0; i--) {
      res[i] = maxHeap.poll();
    }
    return res;
  }
}
