/**
 * public class TreeNode {
 *   public int key;
 *   public TreeNode left;
 *   public TreeNode right;
 *   public TreeNode(int key) {
 *     this.key = key;
 *   }
 * }
 */
public class Solution {
  //Time: O(n), Space: O(n)
  public List<Integer> bfs(TreeNode root) {
    List<Integer> list = new ArrayList<>();
    if (root == null) return list;
    Queue<TreeNode> q = new LinkedList<>();
    q.offer(root);
    while (!q.isEmpty()) {
      TreeNode curr = q.poll();
      list.add(curr.key);
      if (curr.left != null) q.offer(curr.left);
      if (curr.right != null) q.offer(curr.right);
    }
    return list;
  }
}
