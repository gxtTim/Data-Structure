class Solution {
    //Time: O(n^2), Space: O(n)
    public int jump(int[] nums) {
        int[] steps = new int[nums.length];
        for (int i = 1; i < nums.length; i++) {
            steps[i] = Integer.MAX_VALUE;
        }
        for (int i = 1; i < nums.length; i++) {
            for (int j = 0; j < i; j++) {
                if (steps[j] != Integer.MAX_VALUE && j + nums[j] >= i) {
                    steps[i] = Math.min(steps[i], steps[j] + 1);
                }
            }
        }
        return steps[nums.length - 1];
    }
}
