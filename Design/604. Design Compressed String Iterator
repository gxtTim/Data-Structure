class StringIterator {
    Queue<int[]> q = new LinkedList<>();
    public StringIterator(String compressedString) {
        int i = 0, len = compressedString.length();
        while (i < len) {
            int j = i + 1;
            while (j < len && compressedString.charAt(j) - 'A' < 0) {
                j++;
            }
            q.add(new int[]{compressedString.charAt(i) - 'A',
                            Integer.parseInt(
                                compressedString.substring(i + 1, j))});
            i = j;
        }
    }
    
    public char next() {
        if (q.isEmpty()) {
            return ' ';
        }
        int[] top = q.peek();
        top[1]--;
        if (top[1] == 0) {
            q.poll();
        }
        return (char)('A' + top[0]);
    }
    
    public boolean hasNext() {
        return !q.isEmpty();
    }
}

/**
 * Your StringIterator object will be instantiated and called as such:
 * StringIterator obj = new StringIterator(compressedString);
 * char param_1 = obj.next();
 * boolean param_2 = obj.hasNext();
 */
