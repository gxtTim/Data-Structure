class Solution {
    // Time: O(n), Space: O(n)
    public int nthUglyNumber(int n) {
        List<Integer> ugly = new ArrayList<>();
        ugly.add(1);
        int p2 = 0, p3 = 0, p5 = 0;
        for (int i = 1; i < n; i++) {
            int lastNumber = ugly.get(i - 1);
            while (ugly.get(p2) * 2 <= lastNumber) {
                p2++;
            }
            while (ugly.get(p3) * 3 <= lastNumber) {
                p3++;
            }
            while (ugly.get(p5) * 5 <= lastNumber) {
                p5++;
            }
            ugly.add(Math.min(Math.min(ugly.get(p2) * 2, ugly.get(p3) * 3),
                ugly.get(p5) * 5));
        }
        return ugly.get(n - 1);
    }
}
