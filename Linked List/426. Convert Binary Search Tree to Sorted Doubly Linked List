/*
// Definition for a Node.
class Node {
    public int val;
    public Node left;
    public Node right;

    public Node() {}

    public Node(int _val,Node _left,Node _right) {
        val = _val;
        left = _left;
        right = _right;
    }
};
*/
class Solution {
    // Time: O(n), Space: O(n)
    public Node treeToDoublyList(Node root) {
        if (root == null) {
            return null;
        }
        Node left = treeToDoublyList(root.left);
        Node right = treeToDoublyList(root.right);
        root.left = root;
        root.right = root;
        return connect(connect(left, root), right);
    }
    private Node connect(Node one, Node two) {
        if (one == null) {
            return two;
        }
        if (two == null) {
            return one;
        }
        Node tailOne = one.left;
        Node tailTwo = two.left;
        tailOne.right = two;
        two.left = tailOne;
        tailTwo.right = one;
        one.left = tailTwo;
        
        return one;
    }
}
