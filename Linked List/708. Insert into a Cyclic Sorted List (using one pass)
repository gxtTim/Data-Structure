/*
// Definition for a Node.
class Node {
    public int val;
    public Node next;

    public Node() {}

    public Node(int _val,Node _next) {
        val = _val;
        next = _next;
    }
};
*/
class Solution {
    // Time: O(n), Space: O(1)
    public Node insert(Node head, int insertVal) {
        if (head == null) {
            Node curr = new Node(insertVal);
            curr.next = curr;
            return curr;
        }
        Node prev = head, curr = head.next;
        while (curr != head) {
            if (prev.val <= insertVal && insertVal <= curr.val ||
                curr.val < prev.val && 
                (prev.val < insertVal || insertVal < curr.val)) {
                break;
            }
            prev = curr;
            curr = curr.next;
        }
        Node node = new Node(insertVal);
        prev.next = node;
        node.next = curr;
        return head;
    }
}
