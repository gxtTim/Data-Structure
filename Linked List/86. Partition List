/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    /** 2 Partitions: one list all smaller than x, 
      * one list all larger or equal to x 
      * Time: O(n), Space: O(1)
      **/
    public ListNode partition(ListNode head, int x) {
        if (head == null) return head;
        //Initialize two dummy heads
        ListNode small = new ListNode(0);
        ListNode large = new ListNode(0);
        //Maintain two heads
        ListNode smallHead = small;
        ListNode largeHead = large;
        //Traverse through the given list, time: O(n)
        while (head != null) {
            if (head.val < x) {
                small.next = head;
                small = small.next;
            } else {
                large.next = head;
                large = large.next;
            }
            head = head.next;
        }
        //Cut the rest part of the given list if any
        large.next = null;
        //Connect small and large lists
        small.next = largeHead.next;
        //Return new head
        return smallHead.next;
    }
}
