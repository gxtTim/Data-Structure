/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    // Time: O(n), Space: O(1)
    public ListNode rotateRight(ListNode head, int k) {
        if (head == null || head.next == null) {
            return head;
        }
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode slow = dummy, fast = dummy;
        // Get the total length of the list
        int len;
        for (len = 0; fast.next != null; len++) {
            fast = fast.next;
        }
        // Find the target node to do rotation
        for (int i = len - k % len; i > 0; i--) {
            slow = slow.next;
        }
        // Rotate
        fast.next = dummy.next;
        dummy.next = slow.next;
        slow.next = null;
        
        return dummy.next;
    }
}
