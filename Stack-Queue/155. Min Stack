class MinStack {
    /** initialize your data structure here. */
    private Deque<Integer> stack; 
    private Deque<Integer> minStack;
        
    //Time: O(1), Space: O(n)
    public MinStack() {
        stack = new LinkedList<>();
        minStack = new LinkedList<>(); //O(n)
    }
    
    public void push(int x) {
        stack.push(x);
        if (minStack.isEmpty() || x <= minStack.peek()) {
            minStack.push(x);
        }
        if (x > minStack.peek()) {
            minStack.push(minStack.peek());
        }
    }
    
    public void pop() {
        if (stack.isEmpty()) return;
        int res = stack.pop();
        minStack.pop();
    }
    
    public int top() {
        return stack.peek();
    }
    
    public int getMin() {
        return minStack.peek();
    }
}

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(x);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */
