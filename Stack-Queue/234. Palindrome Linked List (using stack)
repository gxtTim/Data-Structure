/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    // Time: O(n), Space: O(n)
    public boolean isPalindrome(ListNode head) {
        if (head == null) return true;
        Stack<Integer> stack = new Stack();
        ListNode curr = head, runner = head;
        while (runner != null && runner.next != null) {
            stack.push(curr.val);
            curr = curr.next;
            runner = runner.next.next;
        }
        if (runner != null) curr = curr.next;
        while (curr != null) {
            if (stack.pop() != curr.val) return false;
            curr = curr.next;
        }
        return true;
    }
}
