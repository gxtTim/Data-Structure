class Solution {
    //Time: O(n * log(n)), Space: O(1)
    public int findPairs(int[] nums, int k) {
        if (nums == null || nums.length == 0) return 0;
        Arrays.sort(nums);
        int i = 0, j = 1, count = 0;
        while (i < nums.length && j < nums.length) {
            if (Math.abs(nums[i] - nums[j]) < k ) j++;
            else if (Math.abs(nums[i] - nums[j]) > k) i++;
            else {
                if (i != j) {
                    count++;
                    // two key steps to this questions
                    // solving problems like [1,1,1,2,2], [1,1,1,1,1], k = 0
                    while (i + 1 < nums.length && nums[i] == nums[i + 1]) i++;
                    while (j + 1 < nums.length && nums[j] == nums[j + 1]) j++;
                }
                j++;
                            
            }
        }
        return count;
    }
}
