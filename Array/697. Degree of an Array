class Solution {
    // Time: O(n), Space: O(n)
    public int findShortestSubArray(int[] nums) {
        Map<Integer, Integer> counts = new HashMap<>();
        int degree = 0;
        
        Map<Integer, Integer> leftIndices = new HashMap<>();
        int min = 0;
        
        for (int i = 0; i < nums.length; i++) {
            counts.put(nums[i], counts.getOrDefault(nums[i], 0) + 1);
            leftIndices.putIfAbsent(nums[i], i);
            if (counts.get(nums[i]) > degree) {
                degree = counts.get(nums[i]);
                min = i - leftIndices.get(nums[i]) + 1;
            } else if (counts.get(nums[i]) == degree) {
                min = Math.min(min, i - leftIndices.get(nums[i]) + 1);
            }
        }
        return min;
    }
}
