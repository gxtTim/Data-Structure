class Solution {
    // Time: O(n), Space: O(n)
    public int[] sortedSquares(int[] A) {
        // Start of positive number
        int j = 0;
        while (j < A.length && A[j] < 0) {
            j++;
        }
        // End of the negative number
        int i = j - 1;
        
        int[] res = new int[A.length];
        int k = 0;
        
        while (i >= 0 && j < A.length) {
            if (A[i] * A[i] < A[j] * A[j]) {
                res[k] = A[i] * A[i];
                k++;
                i--;
            } else {
                res[k] = A[j] * A[j];
                k++;
                j++;
            }
        }
        // If there are still negative elements
        while (i >= 0) {
            res[k] = A[i] * A[i];
            k++;
            i--;
        }
        // If there are still positive elements
        while (j < A.length) {
            res[k] = A[j] * A[j];
            k++;
            j++;
        }
        return res;
    }
}
