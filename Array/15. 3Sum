class Solution {
    //Time: O(n^2), Space: O(n)
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        Arrays.sort(nums);
        for (int i = 0; i <= nums.length - 3; i++) {
            if (i == 0 || nums[i] != nums[i - 1]) {
                int start = i + 1;
                int end = nums.length - 1;
                while (start < end) {
                    if (nums[i] + nums[start] + nums[end] == 0) {
                        List<Integer> list = new ArrayList<>();
                        list.add(nums[i]);
                        list.add(nums[start]);
                        list.add(nums[end]);
                        result.add(list);
                    } 
                    if (nums[i] + nums[start] + nums[end] < 0) {
                        int curr = start;
                        while (nums[start] == nums[curr] &&
                               start < end) {
                            start++;
                        }
                    } else {
                        int curr = end;
                        while (nums[end] == nums[curr] &&
                               start < end) {
                            end--;
                        }
                    }
                }
            }       
        }
        return result;
    }
}
